        if node_type == em.EntityType.CONSENSUS_NODE:
            first_veth_name = f"cn{inter_satellite_link.source_node.node_id}_index{inter_satellite_link.source_interface_index + 1}"
            first_sat_pid = inter_satellite_link.source_node.pid
            first_sat_ip = inter_satellite_link.source_interface_address
            second_veth_name = f"cn{inter_satellite_link.dest_node.node_id}_index{inter_satellite_link.dest_interface_index + 1}"
            second_sat_pid = inter_satellite_link.dest_node.pid
            second_sat_ip = inter_satellite_link.dest_interface_address
            bridge_name = inter_satellite_link.bridge_name
            bridge_interface_name_for_first_sat = f"vth{inter_satellite_link.source_node.node_id}_{bridge_name}"
            bridge_interface_name_for_second_sat = f"vth{inter_satellite_link.dest_node.node_id}_{bridge_name}"
        elif node_type == em.EntityType.SATELLITE_NODE:
            first_veth_name = f"sa{inter_satellite_link.source_node.node_id}_index{inter_satellite_link.source_interface_index + 1}"
            first_sat_pid = inter_satellite_link.source_node.pid
            first_sat_ip = inter_satellite_link.source_interface_address
            second_veth_name = f"sa{inter_satellite_link.dest_node.node_id}_index{inter_satellite_link.dest_interface_index + 1}"
            second_sat_pid = inter_satellite_link.dest_node.pid
            second_sat_ip = inter_satellite_link.dest_interface_address
            bridge_name = inter_satellite_link.bridge_name
            bridge_interface_name_for_first_sat = f"vth{inter_satellite_link.source_node.node_id}_{bridge_name}"
            bridge_interface_name_for_second_sat = f"vth{inter_satellite_link.dest_node.node_id}_{bridge_name}"
        else:
            raise ValueError("unsupported node type")
        try:
            # 在宿主机的命名空间之中
            ip = IPRoute()
            ip.link("add", ifname=first_veth_name, peer=second_veth_name, kind="veth")
            ip.link("set", index=ip.link_lookup(ifname=first_veth_name)[0], net_ns_fd=f"/var/run/netns/{first_sat_pid}")
            ip.link("set", index=ip.link_lookup(ifname=second_veth_name)[0],
                    net_ns_fd=f"/var/run/netns/{second_sat_pid}")
            with NetNS(f"/var/run/netns/{first_sat_pid}") as ns:
                pass
                idx = ns.link_lookup(ifname=first_veth_name)[0]
                ns.addr("add", index=idx, address=first_sat_ip[:-3], prefixlen=30)
                ns.link("set", index=idx, state="up")
            with NetNS(f"/var/run/netns/{second_sat_pid}") as ns:
                pass
                idx = ns.link_lookup(ifname=second_veth_name)[0]
                ns.addr("add", index=idx, address=second_sat_ip[:-3], prefixlen=30)
                ns.link("set", index=idx, state="up")
        except Exception as e:
            print(e)
        # command_list = [
        # ======================= without bridge =======================
        # f"ip link add {first_veth_name} type veth peer name {second_veth_name}",  # 添加源到网桥
        # f"ip link set {first_veth_name} netns {first_sat_pid}",  # 设置命名空间
        # f"ip link set {second_veth_name} netns {second_sat_pid}",  # 设置命名空间
        # f"ip netns exec {first_sat_pid} ip link set {first_veth_name} up",  # 启动接口
        # f"ip netns exec {second_sat_pid} ip link set {second_veth_name} up",  # 启动接口
        # f"ip netns exec {first_sat_pid} ip addr add {first_sat_ip} dev {first_veth_name}",  # 执行命令添加 ip
        # f"ip netns exec {second_sat_pid} ip addr add {second_sat_ip} dev {second_veth_name}",  # 执行命令添加 ip
        # ======================= without bridge =======================

        # ======================= with bridge =======================
        # f"ip link add name {bridge_name} type bridge",  # 创建网桥
        # f"ip link add {first_veth_name} type veth peer name {bridge_interface_name_for_first_sat}",  # 添加源到网桥
        # f"ip link add {second_veth_name} type veth peer name {bridge_interface_name_for_second_sat}",  # 添加目的到网桥
        # f"ip link set {first_veth_name} netns {first_sat_pid}",  # 设置命名空间
        # f"ip link set {second_veth_name} netns {second_sat_pid}",  # 设置命名空间
        # f"ip link set {bridge_interface_name_for_first_sat} master {bridge_name}",  # 将 veth 绑定到网桥
        # f"ip link set {bridge_interface_name_for_second_sat} master {bridge_name}",  # 将 veth 绑定到网桥
        # f"ip netns exec {first_sat_pid} ip link set {first_veth_name} up",  # 启动接口
        # f"ip netns exec {second_sat_pid} ip link set {second_veth_name} up",  # 启动接口
        # f"ip link set {bridge_name} up",  # 开启网桥
        # f"ip link set {bridge_interface_name_for_first_sat} up",  # 启动接口
        # f"ip link set {bridge_interface_name_for_second_sat} up",  # 启动接口
        # f"ip netns exec {first_sat_pid} ip addr add {first_sat_ip} dev {first_veth_name}",  # 执行命令添加 ip
        # f"ip netns exec {second_sat_pid} ip addr add {second_sat_ip} dev {second_veth_name}",  # 执行命令添加 ip
        # ======================= with bridge =======================
        # ]
        # for single_command in command_list:
        #     os.system(single_command)